digraph G {
        graph [bgcolor=white];
        graph [page="8.5,11",size="6,6",ratio=fill,center=1];

        node [shape=rect,height=1];
        edge [color=black];
        subgraph ranks {
        subgraph cluster_high_level {
                rank = same;
                scanner_compiler;
                xformr_tools [label="(USER) xformr and scanner tools"];
                snafufs;
        }
        subgraph cluster_level_2 {
                rank = same;
                cosmos_util;
                libcosmos;
        }
        subgraph cluster_level_2a {
                rank = same;
                cosmosd;
                libhiena;
        }
        subgraph cluster_producers {
                rank = same;
                dcel_producer;
                lookup_fudge;
                access_paths;
        }
        subgraph cluster_level_4 {
                rank = same;
                cosm; dcel; mapsvc; access_frame; scanner_lib; grid;
        }
        subgraph cluster_level_5 {
                rank = same;
                frag; mfrag; map_anchor;
        }
        subgraph cluster_level_6 {
                rank = same;
                btree; flat_array; hash_fn;
        }
        }

        subgraph uses {

                snafufs->libcosmos;

                xformr_tools->libcosmos;
                xformr_tools->cosmos_util;

                libcosmos->cosmosd;
                libcosmos->libhiena;

                cosmos_util->libcosmos [constraint = none];

                cosmosd->cosm;
                cosmosd->access_frame;
                cosmosd->lookup_fudge;
                cosmosd->access_paths;

                cosm->dcel;

                access_frame->dcel;
                access_frame->cosm;

                lookup_fudge->dcel_producer;

                dcel_producer->dcel;
                dcel_producer->access_frame;
                dcel_producer->grid;
                dcel_producer->scanner_lib;

                scanner_lib->mapsvc;

                dcel->frag;
                frag->btree;
        }

}
