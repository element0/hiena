

/* virtual function header file */


typedef struct cosmos_argtype {
        int vartype;
        size_t varlen;
}argtype_t;

typedef struct cosmos_fntype {
        int argc;
        argtype_t **argv;
}fntype_t;




/* virtual function wrappers,
   go into a dylib with static support functions */



const int vfncount = 1;


void *vfn001(fntype_t *fnt, ...)
{
    static fntype_t *fntype = NULL;

        
    if(fntype == NULL)
    {
        if(x != NULL)
        {
            fntype = strndup(x,sizeof(char)*strlen(x));

            /* this could be a callback */
            return vfn001;

        }
        return NULL;
    }
    

}






/* the rpc interface library
 */


static fntype_t parsefntype(char *);



void *cosmos_dlopen(char *, dlmode_t);

void *cosmos_dlsym(void *, char *);

void cosmos_dlclose(void *);

