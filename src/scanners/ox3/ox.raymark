


== DEFINITION: ox language ==

eXtensible Outline

purpose: to parse a base structure from a text outline, that other languages can build on.

the primatives that it recognizes are from an indent based outline:

    - blank lines
    - indent levels
    - text lines


it parses them into a basic nesting structure:

    outline : head open body close
    
    body : LO outline LC
         | body LO outline LC


    LO //element open
    LC //element close


from that nesting structure, another parser can parse the head to generate meaningful identifiers and properties based on its own language.


ie. the divinity parser reads the head to identify a type to assign to the object.  an html outputter can read the nested objects and generate html.


divinity actually parses a layer above the outlines to identify its root object block, ignored floating blocks and address space:

    the first block of non-indented objects is root.

    each additional block of non-indented objects (where blocks are separated by whitespace) is an address.


other parsers that use ox are dcel producers.  divinity is a producer which creates a dcel out of the root object.


--------




== ox example 1 ==

    ignored
        ignored

outline 1
    outline a
        outline xx
    outline b
    outline c

outline 2
    outline aa
    outline bb
        outline yy

--------

== ANALYSIS: ox example 1 ==

blankline         \
indent line       |oxignore
indent line       |
blankline         /
line              \
start_indent line |outline\outline
start_indent line |       / }outline
end_indent        |
strip_indent line |       }outline
strip_indent line |       }outline
end_indent        /
blankline         }oxignore
line              \
start_indent line |outline}outline
strip_indent line |       \outline
start_indent line |       / }outline
end_indent        |
end_indent        /
blankline         }oxignore
--------

== GRAMMAR: ox example 1 ==

%% bison

ox_file
  :
    possible_oxignore
    ox_addr_list
    possible_oxignore
    END
  ;

possible_oxignore
  : %empty
  | oxignore
  ;

oxignore
  : 
  ;

ox_addr_list
  : ox_addr

  | ox_addr_list
    oxignore
    ox_addr
  ;

ox_addr
  : BOL outline
  ;

outline
  : line

  | line
    outline_body
  ;

outline_body
  : start_indent outline
    end_indent

  | start_indent outline
    outline_sublist
    end_indent
  ;

outline_sublist
  : strip_indent outline

  | outline_sublist
    strip_indent outline
  ;


%% lex



--------

== ox example 2 ==

   floating 1
   floating 2
       outline d

outline 1
outline 2
    outline a
outline 3
    outline b


outline 4
    outline c

--------